---
name: CI Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  tests:
    name: Test (${{ matrix.python-version }}, ${{ matrix.pandas-channel }})
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        pandas-channel: ["stable", "dev"]

    steps:
      - name: Install which
        run: sudo apt-get update && sudo apt-get install -y which

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and export plugin
        run: |
          python -m pip install -U pip
          pip install "poetry==1.7.1"
          poetry self add poetry-plugin-export
          poetry --version

      - name: Verify Poetry version
        run: poetry --version

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
          if [ "${{ matrix.pandas-channel }}" = "dev" ]; then
            poetry run pip install --pre --upgrade pandas
          fi

      - name: Export requirements.txt
        run: poetry export -f requirements.txt --output requirements.txt --without-hashes --with dev

      - name: Run tests
        run: |
          poetry run pytest \
            --cov=desktop_tutorial \
            --cov-report=xml:coverage.xml \
            --cov-report=term-missing

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        if: ${{ matrix.python-version == '3.10' && matrix.pandas-channel == 'stable' }}
        with:
          name: coverage-xml-3.10-stable
          path: coverage.xml

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        if: ${{ matrix.python-version == '3.10' && matrix.pandas-channel == 'stable' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          fail_ci_if_error: false

      - name: Verify Poetry version (final)
        run: poetry --version
