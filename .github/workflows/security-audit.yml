---
name: Security Audit and Update Badges

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * 0" # 週次実行

jobs:
  security-audit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit poetry

      - name: Run pip-audit
        id: audit
        run: |
          # --failオプションを削除し、終了コードで判定
          pip-audit -r requirements.txt || AUDIT_EXIT_CODE=$?

          # 終了コードの処理
          if [ "${AUDIT_EXIT_CODE:-0}" -ne 0 ]; then
            echo "::warning::Vulnerabilities detected in dependencies"
            echo "audit_failed=true" >> $GITHUB_OUTPUT
          else
            echo "audit_failed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check dependency conflicts
        run: |
          # platformdirsのバージョン確認
          echo "Checking platformdirs version compatibility..."
          pip list | grep platformdirs

          # Poetryの依存関係チェック
          if [ -f "pyproject.toml" ]; then
            poetry check
            poetry show platformdirs --tree
          fi

      - name: Generate security report
        if: always()
        run: |
          # JSON形式でレポート生成
          pip-audit -r requirements.txt --format json > security-audit-report.json

          # サマリーの生成
          python -c "
          import json
          with open('security-audit-report.json', 'r') as f:
              data = json.load(f)
              vulns = data.get('vulnerabilities', [])
              print(f'Found {len(vulns)} vulnerabilities')
              for vuln in vulns:
                  print(f\"- {vuln.get('name')}: {vuln.get('id')}\")
          " || echo "No JSON report generated"

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-report
          path: |
            security-audit-report.json
            requirements.txt

      - name: Update badges (if needed)
        if: github.ref == 'refs/heads/main'
        run: |
          # バッジ更新ロジック
          echo "Updating security badges..."
          # 実際のバッジ更新処理をここに追加

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && steps.audit.outputs.audit_failed == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ Security vulnerabilities detected in dependencies. Please review the audit report.'
            })
